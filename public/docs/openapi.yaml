openapi: 3.0.3
info:
  title: Events
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/events:
    get:
      summary: 'Get a list of events.'
      operationId: getAListOfEvents
      description: 'This endpoint returns a list of events that have available tickets, along with their basic information.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      event:
                        id: 1
                        name: 'Global Tech Expo 2025'
                        date: '2024-11-15'
                    -
                      event:
                        id: 2
                        name: 'World Science Fair 2025'
                        date: '2024-12-20'
                properties:
                  data:
                    type: array
                    example:
                      -
                        event:
                          id: 1
                          name: 'Global Tech Expo 2025'
                          date: '2024-11-15'
                      -
                        event:
                          id: 2
                          name: 'World Science Fair 2025'
                          date: '2024-12-20'
                    items:
                      type: object
                      properties:
                        event:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Global Tech Expo 2025'
                            date:
                              type: string
                              example: '2024-11-15'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No events available.'
                properties:
                  message:
                    type: string
                    example: 'No events available.'
      tags:
        - 'Event management'
  '/api/events/{eventId}':
    get:
      summary: 'Get details of a specific event.'
      operationId: getDetailsOfASpecificEvent
      description: 'This endpoint retrieves detailed information about a specific event, including its tickets and conferences.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    event:
                      id: 1
                      name: 'Global Tech Expo 2025'
                      date: '2024-11-15'
                    conferences:
                      -
                        id: 1
                        title: 'The Future of AI'
                        description: 'An in-depth look at the advancements and challenges in AI development.'
                        date:
                          start: '2024-12-05 09:00:00'
                          end: '2024-12-05 10:30:00'
                        speaker: 'Dr. Sarah Johnson'
                        type: keynote
                    tickets:
                      -
                        id: 1
                        name: 'VIP Pass'
                        special_validity: null
                properties:
                  data:
                    type: object
                    properties:
                      event:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Global Tech Expo 2025'
                          date:
                            type: string
                            example: '2024-11-15'
                      conferences:
                        type: array
                        example:
                          -
                            id: 1
                            title: 'The Future of AI'
                            description: 'An in-depth look at the advancements and challenges in AI development.'
                            date:
                              start: '2024-12-05 09:00:00'
                              end: '2024-12-05 10:30:00'
                            speaker: 'Dr. Sarah Johnson'
                            type: keynote
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            title:
                              type: string
                              example: 'The Future of AI'
                            description:
                              type: string
                              example: 'An in-depth look at the advancements and challenges in AI development.'
                            date:
                              type: object
                              properties:
                                start:
                                  type: string
                                  example: '2024-12-05 09:00:00'
                                end:
                                  type: string
                                  example: '2024-12-05 10:30:00'
                            speaker:
                              type: string
                              example: 'Dr. Sarah Johnson'
                            type:
                              type: string
                              example: keynote
                      tickets:
                        type: array
                        example:
                          -
                            id: 1
                            name: 'VIP Pass'
                            special_validity: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'VIP Pass'
                            special_validity:
                              type: string
                              example: null
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Event not found.'
                properties:
                  message:
                    type: string
                    example: 'Event not found.'
      tags:
        - 'Event management'
    parameters:
      -
        in: path
        name: eventId
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  /api/conference/register:
    post:
      summary: 'Register an attendee for a conference.'
      operationId: registerAnAttendeeForAConference
      description: 'This endpoint allows an authenticated attendee to register for a specific conference using a valid ticket.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Attendee successfully registered to the conference.'
                  registration:
                    attendee_id: 1
                    ticket_id: 1
                    conference_id: 2
                    created_at: '2024-10-11T10:00:00.000000Z'
                    updated_at: '2024-10-11T10:00:00.000000Z'
                    id: 1
                properties:
                  message:
                    type: string
                    example: 'Attendee successfully registered to the conference.'
                  registration:
                    type: object
                    properties:
                      attendee_id:
                        type: integer
                        example: 1
                      ticket_id:
                        type: integer
                        example: 1
                      conference_id:
                        type: integer
                        example: 2
                      created_at:
                        type: string
                        example: '2024-10-11T10:00:00.000000Z'
                      updated_at:
                        type: string
                        example: '2024-10-11T10:00:00.000000Z'
                      id:
                        type: integer
                        example: 1
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The attendee is already registered for this conference.'
                properties:
                  message:
                    type: string
                    example: 'The attendee is already registered for this conference.'
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The ticket is no more available.'
                    properties:
                      message:
                        type: string
                        example: 'The ticket is no more available.'
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The selected ticket does not belong to the event associated with this conference.'
                    properties:
                      message:
                        type: string
                        example: 'The selected ticket does not belong to the event associated with this conference.'
      tags:
        - 'Registration management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket_id:
                  type: integer
                  description: 'The ID of the ticket.'
                  example: 1
                conference_id:
                  type: integer
                  description: 'The ID of the conference.'
                  example: 2
              required:
                - ticket_id
                - conference_id
  /api/conference/unregister:
    delete:
      summary: "Remove an attendee's registration for a conference."
      operationId: removeAnAttendeesRegistrationForAConference
      description: 'This endpoint allows an authenticated attendee to remove their registration for a specific conference.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Registration successfully removed.'
                properties:
                  message:
                    type: string
                    example: 'Registration successfully removed.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Registration not found for this attendee in the specified conference.'
                properties:
                  message:
                    type: string
                    example: 'Registration not found for this attendee in the specified conference.'
      tags:
        - 'Registration management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket_id:
                  type: integer
                  description: 'The ID of the ticket.'
                  example: 1
                conference_id:
                  type: integer
                  description: 'The ID of the conference.'
                  example: 2
              required:
                - ticket_id
                - conference_id
  /api/auth/register:
    post:
      summary: 'Register a new attendee.'
      operationId: registerANewAttendee
      description: 'This endpoint allows an attendee to register a new account.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|XXYYZZ
                  token_type: Bearer
                  attendee:
                    name: 'Jane Doe'
                    email: jane.doe@example.com
                    updated_at: '2024-10-11T13:50:23.000000Z'
                    created_at: '2024-10-11T13:50:23.000000Z'
                    id: 78
                properties:
                  access_token:
                    type: string
                    example: 1|XXYYZZ
                  token_type:
                    type: string
                    example: Bearer
                  attendee:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Jane Doe'
                      email:
                        type: string
                        example: jane.doe@example.com
                      updated_at:
                        type: string
                        example: '2024-10-11T13:50:23.000000Z'
                      created_at:
                        type: string
                        example: '2024-10-11T13:50:23.000000Z'
                      id:
                        type: integer
                        example: 78
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name field is required. (and 5 more errors)'
                  errors:
                    name:
                      - 'The name field is required.'
                    email:
                      - 'The email has already been taken.'
                    password:
                      - 'The password must be at least 8 characters.'
                    password_confirmation:
                      - 'The password confirmation does not match.'
                properties:
                  message:
                    type: string
                    example: 'The name field is required. (and 5 more errors)'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name field is required.'
                        items:
                          type: string
                      email:
                        type: array
                        example:
                          - 'The email has already been taken.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password must be at least 8 characters.'
                        items:
                          type: string
                      password_confirmation:
                        type: array
                        example:
                          - 'The password confirmation does not match.'
                        items:
                          type: string
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the attendee.'
                  example: 'Jane Doe'
                email:
                  type: string
                  description: 'The email of the attendee. This email must be unique.'
                  example: jane.doe@example.com
                password:
                  type: string
                  description: "The attendee's password. Must be at least 8 characters long."
                  example: teste123
                password_confirmation:
                  type: string
                  description: 'Password confirmation must match the password.'
                  example: molestias
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/auth/login:
    post:
      summary: 'Login an attendee.'
      operationId: loginAnAttendee
      description: 'This endpoint allows an attendee to log in by providing valid credentials.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|XXYYZZ
                  token_type: Bearer
                  attendee:
                    name: 'Jane Doe'
                    email: jane.doe@example.com
                    updated_at: '2024-10-11T13:50:23.000000Z'
                    created_at: '2024-10-11T13:50:23.000000Z'
                    id: 78
                properties:
                  access_token:
                    type: string
                    example: 1|XXYYZZ
                  token_type:
                    type: string
                    example: Bearer
                  attendee:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Jane Doe'
                      email:
                        type: string
                        example: jane.doe@example.com
                      updated_at:
                        type: string
                        example: '2024-10-11T13:50:23.000000Z'
                      created_at:
                        type: string
                        example: '2024-10-11T13:50:23.000000Z'
                      id:
                        type: integer
                        example: 78
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid Credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid Credentials'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The email field is required. (and 1 more error)'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  message:
                    type: string
                    example: 'The email field is required. (and 1 more error)'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the attendee.'
                  example: jane.doe@example.com
                password:
                  type: string
                  description: "The attendee's password. Must be at least 8 characters long."
                  example: teste123
              required:
                - email
                - password
      security: []
  /api/auth/logout:
    delete:
      summary: 'Logout the attendee.'
      operationId: logoutTheAttendee
      description: 'This endpoint allows the authenticated attendee to log out, revoking all tokens.'
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User management'
tags:
  -
    name: 'Event management'
    description: "\nThis API provides functionalities for managing events, including retrieving event details, associated conferences, and available tickets.\nIts endpoints allow attendees to access event information and related data, ensuring an organized experience for attendees and organizers."
  -
    name: 'Registration management'
    description: "\nThis API offers capabilities for attendee registrations to conferences, allowing for ticket validation and tracking of attendance.\nIts endpoints facilitate the registration and removal of attendees from events, ensuring smooth management of conference participation."
  -
    name: 'User management'
    description: "\nThis API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.\nIts endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices."
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by registering or logging in through the respective endpoints.'
security:
  -
    default: []
