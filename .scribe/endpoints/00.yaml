name: 'User management'
description: |-

  This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
  Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: 'User management'
      groupDescription: |-

        This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
        Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new attendee.'
      description: 'This endpoint allows an attendee to register a new account.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the attendee.'
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the attendee. This email must be unique.'
        required: true
        example: jane.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: "The attendee's password. Must be at least 8 characters long."
        required: true
        example: teste123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation must match the password.'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane.doe@example.com
      password: teste123
      password_confirmation: molestias
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "access_token": "1|XXYYZZ",
            "token_type": "Bearer",
            "attendee": {
                "name": "Jane Doe",
                "email": "jane.doe@example.com",
                "updated_at": "2024-10-11T13:50:23.000000Z",
                "created_at": "2024-10-11T13:50:23.000000Z",
                "id": 78
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The name field is required. (and 5 more errors)",
            "errors": {
                "name": [
                    "The name field is required."
                ],
                "email": [
                    "The email has already been taken."
                ],
                "password": [
                    "The password must be at least 8 characters."
                ],
                "password_confirmation": [
                    "The password confirmation does not match."
                ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: 'User management'
      groupDescription: |-

        This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
        Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
      subgroup: ''
      subgroupDescription: ''
      title: 'Login an attendee.'
      description: 'This endpoint allows an attendee to log in by providing valid credentials.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the attendee.'
        required: true
        example: jane.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: "The attendee's password. Must be at least 8 characters long."
        required: true
        example: teste123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: jane.doe@example.com
      password: teste123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "access_token": "1|XXYYZZ",
            "token_type": "Bearer",
            "attendee": {
                "name": "Jane Doe",
                "email": "jane.doe@example.com",
                "updated_at": "2024-10-11T13:50:23.000000Z",
                "created_at": "2024-10-11T13:50:23.000000Z",
                "id": 78
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid Credentials"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The email field is required. (and 1 more error)",
            "errors": {
                "email": [
                    "The email field is required."
                ],
                "password": [
                    "The password field is required."
                ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/auth/logout
    metadata:
      groupName: 'User management'
      groupDescription: |-

        This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
        Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout the attendee.'
      description: 'This endpoint allows the authenticated attendee to log out, revoking all tokens.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vke43c5f6a8PgbDV6E1Zahd'
    controller: null
    method: null
    route: null
    custom: []
